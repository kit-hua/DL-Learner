/**
 * Simple test example for string datatypes 
 * solution: hasManufacturer."SCHUNK" and hasWeight <= 78,5
 */
prefixes = [ ("kb","http://www.ipr.kit.edu/aml_importer#") ]
 
// knowledge source definition 
ks.type = "OWL File"
ks.fileName = "testD2.owl" 

// reasoner
reasoner.type = "closed world reasoner"
reasoner.sources = { ks }

// learning problem
lp.type = "posNegStandard"
lp.positiveExamples = {
	"kb:suc_UR10",
	"kb:suc_UR5",
	"kb:suc_UR3"
}
lp.negativeExamples = {
	"kb:suc_UR-Dummy-2",
	"kb:suc_UR-Dummy-4",
	"kb:suc_ATN-LK-R3",
	"kb:suc_Kinect",
	"kb:suc_SICK-IVC-3D-30",
	"kb:suc_SICK-Light-Curtain",
	"kb:suc_SICK-OD1-B015H05I14",
	"kb:suc_SICK-PIM60",
	"kb:suc_SICK-S30B-2011GB",
	"kb:suc_LBR-Dummy-1",
	"kb:suc_LBR-Dummy-2",
	"kb:suc_LBR-Dummy-3",
	"kb:suc_KR-8-R2010",
	"kb:suc_KR-16-R2010",
	"kb:suc_KR-12-R1810",
	"kb:suc_KR-20-R1810"
}


lp.reasoner = reasoner

op.type = "rho"
op.reasoner = reasoner

op.useNegation = false
op.useSomeOnly = true
op.useAllConstructor = true
op.useCardinalityRestrictions = false
op.frequencyThreshold = 1

op.useDataHasValueConstructor = true
op.useHasValueConstructor = true
op.useStringDatatypes = true
op.useNumericDatatypes = true

accuracyMethod.type = "fmeasure"
alg.type = "celoe_aml"
alg.reasoner = reasoner
alg.operator = op
alg.searchTreeFile = "/Users/aris/Documents/repositories/ipr/aml_import/resources/output/ilp2018/4_nestedIE/log/ur24_celoe_d2"
alg.writeSearchTree = false
alg.maxExecutionTimeInSeconds = 600
